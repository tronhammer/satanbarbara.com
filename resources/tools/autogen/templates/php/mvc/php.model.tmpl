<?php

abstract class ${ObjectName}Model extends BaseModel {

    /**@* {String} Name of database. */
	const _DATABASE = "${db["name"]}";

    /**@* {String} Name of table in the database. */
    const _TABLE = "${listingKey}";

    /**@* {Array} Used as a means of validating and sanitizing object properties before they reach the database. */
    static protected $attrs = ${JSONObjToPHPObj(properties, 1)};

    /**@* {Array} Defines which fields are required for an entry. */
	static protected $required = array(
<%
	first = 1
%>
%for propName in properties:
	%if properties[ propName ]["generator"] == "user" and properties[ propName ].get("required"):
		${", " if first != 1 else ""}"${properties[ propName ]["name"]}"
<%
	first = 0
%>
	%endif
%endfor
	);

	static protected $userSettable = array(
<%
	first = 1
%>
%for propName in properties:
	%if properties[ propName ]["generator"] == "user":
		${", " if first != 1 else ""}"${properties[ propName ]["name"]}"
<%
	first = 0
%>
	%endif
%endfor
	);

	static protected $userVisible = array(
<%
	first = 1
%>
%for propName in properties:
	%if not properties[ propName ].get("restricted"):
		${", " if first != 1 else ""}"${properties[ propName ]["name"]}"
<%
	first = 0
%>
	%endif
%endfor
	);

    /**@* {Array} Used as a means of validating and sanitizing object properties before they reach the database. */
    static public $references = ${JSONObjToPHPObj(junctions, 1)};

	static public function Create($data) {
		$data["created"] = date("Y-m-d h:i:s A");
		
		self::Save($data);

		return array("good!");
	}

	static public function Validate($data) {
		switch($data["name"]){
			case "created":
				break;
		}

		return $data["value"];
	}
}